# Generated by Django 3.2.3 on 2021-05-24 11:50

import apps.recipes.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, unique=True, verbose_name='Ingredient name')),
            ],
            options={
                'verbose_name': 'Recipe ingredient',
                'verbose_name_plural': 'Recipe ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Recipe title')),
                ('image', models.ImageField(blank=True, help_text='Image file only', null=True, upload_to='recipe_images', verbose_name='Recipe image')),
                ('slug', models.SlugField(max_length=60, unique=True, verbose_name='Recipes slug, a part of detail page URL')),
                ('time', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cooking time in minutes')),
                ('description', models.TextField(blank=True, help_text='Fill in the description', null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Publication date')),
                ('is_active', models.BooleanField(default=True)),
                ('author', models.ForeignKey(default=apps.recipes.utils.get_first_user_id, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Recipe instance',
                'verbose_name_plural': 'Recipes instances',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingredient measure units. Eg: gram, kilogram, spoon', max_length=127, unique=True, verbose_name='Unit name')),
                ('short', models.CharField(help_text='Unit shortened name. Max: 9 symbols.', max_length=9, unique=True, verbose_name='Unit shortened name')),
            ],
            options={
                'verbose_name': 'Ingredient unit',
                'verbose_name_plural': 'Ingredient units',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipe_ingredients', to='recipes.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(blank=True, help_text="Fill out some ingredients and it's values", through='recipes.RecipeIngredient', to='recipes.Ingredient'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='unit',
            field=models.ForeignKey(help_text='Unit for current Ingredient', on_delete=django.db.models.deletion.RESTRICT, related_name='Ingredient', to='recipes.unit', verbose_name='Ingredient unit'),
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Author to follow')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='Someone who follows the author')),
            ],
            options={
                'verbose_name': 'Follow instance',
                'verbose_name_plural': 'Follow instances',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_users', to='recipes.recipe', verbose_name='Recipe')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_recipes', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favorites object',
                'verbose_name_plural': 'Favorites objects',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carts', to='recipes.recipe', verbose_name='Recipe in cart')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopitems', to=settings.AUTH_USER_MODEL, verbose_name="Cart's user")),
            ],
            options={
                'verbose_name': 'Recipe in cart relation',
                'verbose_name_plural': 'Recipe in cart relations',
            },
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('follower', 'author'), name='twice_follow_impossible'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite_user_recipe'),
        ),
        migrations.AddConstraint(
            model_name='cartitem',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='two_recipes_in_one_cart_impossible'),
        ),
    ]
